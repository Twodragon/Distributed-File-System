#TODOS:

1. ~~Add base classes for server-types and server_groups-types and inherit current classes from them~~
2. ~~Add a middle- inter_server_session for determining if the new connection if a client or a slave and then adding them to the right group~~
2. ~~Add strand to sequentially send messages that are sequential~~(handled it with mutex on write to connection) 
3. ~~Add a protocol and functionality for sending a basic string from client to slave~~
4. ~~Figure out how to send a string received by slave back to client~~
5. ~~Add fs functionality for server(only directory and files names)~~
6. ~~Add a protocol and functionality for sending fs commands from client to server~~
7. ~~Make a map in slaves_group: client_id->filename->slave_id and address_block_id, put block indexes there when storing in slave, and get data in blocks or free blocks in slaves on such command~~
7. ~~Import the c++ functionality of fs_handler in c-code of fs~~ 
7. ~~Add fs functionality for slaves(index of address block equals number of file_block in the system)~~
8. ~~Combine all functionality of fs (one file - one server)~~
7. ~~Add rw-mutexes on files~~
7. ~~Clean up on the sending-receiving and add correct rm!~~
7. ~~Figure out the spaces before file data problem~~
7. ~~Add the count of blocks on slaves and base_fs~~
7. ~~Add export-import functions for client~~
9. Add fragmentation of files (one file - different servers)
10. Add periodical saving of filesystems on hard drive
7. ~~Prohibit deleting directories if somebody else is in them~~
7. ~~Add mutexes on shared parts of fs~~
10. ~~Add periodical backing up of servers~~ -- not implemented because I have little time to finish this project and this feature is not that necessary. Left some previously added functionality for the backup feature though.
11. TEST TEST TEST and CLEAN UP